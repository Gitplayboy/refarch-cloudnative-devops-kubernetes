---
stages:
- name: BUILD
  inputs:
  - service: ${REPO}
    type: git
    branch: master
  triggers:
  - type: commit
  jobs:
  - name: Register Inventory Microservice Container Image
    type: builder
    extension_id: ibm.devops.services.pipeline.container.builder
    target:
      region_id: ${REGION}
      organization: ${ORG}
      space: ${SPACE}
    IMAGE_NAME: ${NAME}
    USE_CACHED_LAYERS: 'true'
    COMMAND: |-
        #!/bin/bash
        # The following are some example deployment scripts.  Use these as is or fork them and include your updates here:
        echo -e "${label_color}Starting deployment script${no_color}"


        # To view/fork this script goto: https://github.com/Osthanes/deployscripts
        # git_retry will retry git calls to prevent pipeline failure on temporary github problems
        # the code can be found in git_util.sh at https://github.com/Osthanes/container_deployer
        git_retry clone https://github.com/ssibm/deployscripts.git deployscripts

        # get MYSQL information
        log_and_echo "MySQL Container: ${MYSQL_CONTAINER}"
        $IC_COMMAND inspect $MYSQL_CONTAINER|grep -E 'MYSQL|HostIp|HostPort'|sed 's/["|,|\" \"]//g'|sed 's/:/=/g' > mysql.env
        . mysql.env
        OPTIONAL_ARGS="${OPTIONAL_ARGS} -e "spring.application.name=${INVENTORY_MSNAME}" -e "server.context-path=${CTXPATH} -e "eureka.client.serviceUrl.defaultZone=${EUREKA_REGISTRY_URL}" -e "spring.datasource.url=jdbc:mysql://$HostIp:$HostPort/$MYSQL_DATABASE" -e "spring.datasource.username=${MYSQL_USER}" -e "spring.datasource.password=${MYSQL_PASSWORD}""
        log_and_echo "Optional Args: ${OPTIONAL_ARGS}"

        # Deploy Container Group:
        # Optional environment properties (can be set directly in this script, or defined as environment properties):
        #      NAME              Value         Description
        #   =============      =========     ==============
        #   ROUTE_HOSTNAME      String       Specify the Hostname for the Cloud Foundry Route you wish to assign to this container group.  By default this is not set.
        #   ROUTE_DOMAIN        String       Specify domain name for the Cloud Foundry Route you wish to assign to this container group.  By default this is not set.
        #   BIND_TO             String       Specify a Bluemix application name that whose bound services you wish to make available to the container.  By default this is not set.
        #   DESIRED_INSTANCES:  Number       Specify the number of instances in the group.  Default value is 1.
        #   AUTO_RECOVERY:      Boolean      Set auto-recovery to true/false.  Default value is false.

        #                                    Default is false.
        #   CONTAINER_SIZE      String       Specify container size: pico (64), nano (128), micro (256), tiny (512), small (1024), medium (2048),
        #                                                            large (4096), x-large (8192), 2x-large (16384).
        #                                    Default is micro (256).
        #   CONCURRENT_VERSIONS Number       Number of versions of this group to leave active.
        #                                    Default is 1
        # IF YOU WANT CONTAINER GROUPS .. uncomment the next line, and comment out the previous deployment line (/bin/bash deployscripts/deploygroup.sh)
        /bin/bash deployscripts/deploygroup.sh

        RESULT=$?

        # source the deploy property file
        if [ -f "${DEPLOY_PROPERTY_FILE}" ]; then
          source "$DEPLOY_PROPERTY_FILE"
        fi

        #########################
        # Environment DETAILS   #
        #########################
        # The environment has been setup.
        # The Cloud Foundry CLI (cf), IBM Container Service CLI (ice), Git client (git), IDS Inventory CLI (ids-inv) and Python 2.7.3 (python) have been installed.
        # Based on the organization and space selected in the Job credentials are in place for both IBM Container Service and IBM Bluemix

        # The following colors have been defined to help with presentation of logs: green, red, label_color, no_color.
        if [ $RESULT -ne 0 ]; then
            echo -e "${red}Executed failed or had warnings ${no_color}"
            ${EXT_DIR}/print_help.sh
            exit $RESULT
        fi
        echo -e "${green}Execution complete${no_label}"
- name: DEPLOY
  inputs:
  - type: job
    stage: BUILD
    job: Register Inventory Microservice Container Image
  properties:
  - name: ROUTE_HOSTNAME
    value: ${NAME}
    type: text
  - name: ROUTE_DOMAIN
    value: ${DOMAIN}
    type: text
  - name: MYSQL_CONTAINER
    value: ${MYSQL_CONTAINER}
    type: text
  - name: EUREKA_REGISTRY_URL
    value: ${EUREKA_REGISTRY_URL}
    type: text
  - name: AUTO_RECOVERY
    value: 'true'
    type: text
  - name: MEMORY
    value: ${MEMORY}
    type: text
  - name: MIN_INSTANCES
    value: ${MIN_INSTANCES}
    type: text
  - name: MAX_INSTANCES
    value: ${MAX_INSTANCES}
    type: text
  - name: DESIRED_INSTANCES
    value: ${DESIRED_INSTANCES}
    type: text
  - name: INVENTORY_MSNAME
    value: ${INVENTORY_MSNAME}
    type: text
  - name: CTXPATH
    value: ${CTXPATH}
    type: text
  triggers:
  - type: stage
  jobs:
  - name: Deploy Inventory Microservice Container Group
    type: deployer
    extension_id: ibm.devops.services.pipeline.docker.deploy.ice
    target:
      region_id: ${REGION}
      organization: ${ORG}
      space: ${SPACE}
    PORT: ${PORT}
    OPTIONAL_ARGS: -m ${MEMORY} --min {MIN_INSTANCES} --max ${MAX_INSTANCES} --env eureka.client.fetchRegistry=true --env eureka.client.registerWithEureka=true --env eureka.instance.nonSecurePort=80 --env eureka.port=80
    CONTAINER_NAME: ${ROUTE_HOSTNAME}
    DEPLOY_TYPE: red_black
    COMMAND: |-
        #!/bin/bash
        # The following are some example deployment scripts.  Use these as is or fork them and include your updates here:
        echo -e "${label_color}Starting deployment script${no_color}"

        # To view/fork this script goto: https://github.com/Osthanes/deployscripts
        # git_retry will retry git calls to prevent pipeline failure on temporary github problems
        # the code can be found in git_util.sh at https://github.com/Osthanes/container_deployer
        git_retry clone https://github.com/ssibm/deployscripts.git deployscripts

        # get MYSQL information
        log_and_echo "MySQL Container: ${MYSQL_CONTAINER}"
        $IC_COMMAND inspect $MYSQL_CONTAINER|grep -E 'MYSQL|HostIp|HostPort'|sed 's/["|,|\" \"]//g'|sed 's/:/=/g' > mysql.env
        . mysql.env
        OPTIONAL_ARGS="${OPTIONAL_ARGS} -e "spring.application.name=${INVENTORY_MSNAME}" -e "server.context-path=${CTXPATH} -e "eureka.client.serviceUrl.defaultZone=${EUREKA_REGISTRY_URL}" -e "spring.datasource.url=jdbc:mysql://$HostIp:$HostPort/$MYSQL_DATABASE" -e "spring.datasource.username=${MYSQL_USER}" -e "spring.datasource.password=${MYSQL_PASSWORD}""
        log_and_echo "Optional Args: ${OPTIONAL_ARGS}"

        # Deploy Container Group:
        # Optional environment properties (can be set directly in this script, or defined as environment properties):
        #      NAME              Value         Description
        #   =============      =========     ==============
        #   ROUTE_HOSTNAME      String       Specify the Hostname for the Cloud Foundry Route you wish to assign to this container group.  By default this is not set.
        #   ROUTE_DOMAIN        String       Specify domain name for the Cloud Foundry Route you wish to assign to this container group.  By default this is not set.
        #   BIND_TO             String       Specify a Bluemix application name that whose bound services you wish to make available to the container.  By default this is not set.
        #   DESIRED_INSTANCES:  Number       Specify the number of instances in the group.  Default value is 1.
        #   AUTO_RECOVERY:      Boolean      Set auto-recovery to true/false.  Default value is false.

        #                                    Default is false.
        #   CONTAINER_SIZE      String       Specify container size: pico (64), nano (128), micro (256), tiny (512), small (1024), medium (2048),
        #                                                            large (4096), x-large (8192), 2x-large (16384).
        #                                    Default is micro (256).
        #   CONCURRENT_VERSIONS Number       Number of versions of this group to leave active.
        #                                    Default is 1
        # IF YOU WANT CONTAINER GROUPS .. uncomment the next line, and comment out the previous deployment line (/bin/bash deployscripts/deploygroup.sh)
        /bin/bash deployscripts/deploygroup.sh

        RESULT=$?

        # source the deploy property file
        if [ -f "${DEPLOY_PROPERTY_FILE}" ]; then
          source "$DEPLOY_PROPERTY_FILE"
        fi

        #########################
        # Environment DETAILS   #
        #########################
        # The environment has been setup.
        # The Cloud Foundry CLI (cf), IBM Container Service CLI (ice), Git client (git), IDS Inventory CLI (ids-inv) and Python 2.7.3 (python) have been installed.
        # Based on the organization and space selected in the Job credentials are in place for both IBM Container Service and IBM Bluemix

        # The following colors have been defined to help with presentation of logs: green, red, label_color, no_color.
        if [ $RESULT -ne 0 ]; then
            echo -e "${red}Executed failed or had warnings ${no_color}"
            ${EXT_DIR}/print_help.sh
            exit $RESULT
        fi
        echo -e "${green}Execution complete${no_label}"
