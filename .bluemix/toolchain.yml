---
name: "Omnichannel Toolchain"
description: "Omnichannel sample application"
version: 0.1
required:
 - deploy

git-netflix-eureka:
  service_id: githubpublic
  parameters:
    repo_name: "microservices-netflix-eureka-{{name}}"
    repo_url: "https://github.com/ibm-cloud-architecture/microservices-netflix-eureka"
    type: clone
    has_issues: true

git-netflix-zuul:
  service_id: githubpublic
  parameters:
    repo_name: "microservices-netflix-zuul-{{name}}"
    repo_url: "https://github.com/ibm-cloud-architecture/microservices-netflix-zuul"
    type: clone
    has_issues: true

git-inventorydb-mysql:
  service_id: githubpublic
  parameters:
    repo_name: "refarch-cloudnative-mysql-{{name}}"
    repo_url: "https://github.com/ibm-cloud-architecture/refarch-cloudnative-mysql"
    type: clone
    has_issues: true

# git-micro-inventory:
#   service_id: githubpublic
#   parameters:
#     repo_name: "refarch-cloudnative-micro-inventory-{{name}}"
#     repo_url: https://github.com/ibm-cloud-architecture/refarch-cloudnative-micro-inventory
#     type: clone
#     has_issues: true

# git-micro-socialreview:
#   service_id: githubpublic
#   parameters:
#     repo_name: "refarch-cloudnative-micro-socialreview-{{name}}"
#     repo_url: https://github.com/ibm-cloud-architecture/refarch-cloudnative-micro-socialreview
#     type: clone
#     has_issues: true

# git-bff-inventory:
#   service_id: githubpublic
#   parameters:
#     repo_name: "refarch-cloudnative-bff-inventory-{{name}}"
#     repo_url: https://github.com/ibm-cloud-architecture/refarch-cloudnative-bff-inventory
#     type: clone
#     has_issues: true

# git-bff-socialreview:
#   service_id: githubpublic
#   parameters:
#     repo_name: "refarch-cloudnative-bff-socialreview-{{name}}"
#     repo_url: https://github.com/ibm-cloud-architecture/refarch-cloudnative-bff-socialreview
#     type: clone
#     has_issues: true

# git-api:
#   service_id: githubpublic
#   parameters:
#     repo_name: "refarch-cloudnative-api-{{name}}"
#     repo_url: https://github.com/ibm-cloud-architecture/refarch-cloudnative-api
#     type: clone
#     has_issues: true

git-bluecompute-web:
  service_id: githubpublic
  parameters:
    repo_name: "refarch-cloudnative-bluecompute-web-{{name}}"
    repo_url: "https://github.com/ibm-cloud-architecture/refarch-cloudnative-bluecompute-web"
    type: clone
    has_issues: true

pipeline-netflix-eureka:
  service_id: pipeline
  hidden: [form, description]
  parameters:
    name: "netflix-eureka"
    ui-pipeline: true
    services: ["git-netflix-eureka"]
    configuration:
      content: $file(netflix-eureka.pipeline.yml)
      env:
       DOMAIN: "{{deploy.parameters.route-domain}}"
       REPO: "git-netflix-eureka"
       REGION: "{{deploy.parameters.deploy-region}}"
       ORG: "{{deploy.parameters.deploy-org}}"
       SPACE: "{{deploy.parameters.deploy-space}}"
       NAME: "{{pipeline-netflix-eureka.parameters.name}}"
       PORT: "8761"
       MEMORY: "128"
       MIN_INSTANCES: "1"
       MAX_INSTANCES: "3"
       DESIRED_INSTANCES: "2"
      execute: true

pipeline-netflix-zuul:
  service_id: pipeline
  hidden: [form, description]
  parameters:
    name: "netflix-zuul"
    ui-pipeline: true
    services: ["git-netflix-zuul"]
    configuration:
      content: $file(netflix-zuul.pipeline.yml)
      env:
       DOMAIN: "{{deploy.parameters.route-domain}}"
       REPO: "git-netflix-zuul"
       REGION: "{{deploy.parameters.deploy-region}}"
       ORG: "{{deploy.parameters.deploy-org}}"
       SPACE: "{{deploy.parameters.deploy-space}}"
       NAME: "{{pipeline-netflix-zuul.parameters.name}}"
       PORT: "8080"
       MEMORY: "128"
       MIN_INSTANCES: "1"
       MAX_INSTANCES: "3"
       DESIRED_INSTANCES: "2"
       EUREKA_REGISTRY_URL: "http://{{pipeline-netflix-eureka.parameters.name}}.{{deploy.parameters.route-domain}}/eureka/"
      execute: true

pipeline-inventorydb-mysql:
  service_id: pipeline
  hidden: [form, description]
  parameters:
    name: "inventorydb-mysql"
    ui-pipeline: true
    services: ["git-inventorydb-mysql"]
    configuration:
      content: $file(inventorydb-mysql.pipeline.yml)
      env:
       DOMAIN: "{{deploy.parameters.route-domain}}"
       REPO: "git-inventorydb-mysql"
       REGION: "{{deploy.parameters.deploy-region}}"
       ORG: "{{deploy.parameters.deploy-org}}"
       SPACE: "{{deploy.parameters.deploy-space}}"
       NAME: "{{pipeline-inventorydb-mysql.parameters.name}}"
       PORT: "3306"
       MEMORY: "128"
       DBNAME: "inventorydb"
       DBUSER: "dbuser"
       DBPASS: "Pass4dbUs3r"
       DBAPASS: "Pass4Admin123"
      execute: true

pipeline-bluecompute-web:
  service_id: pipeline
  hidden: [form, description]
  parameters:
    name: "bluecompute-web"
    ui-pipeline: true
    services: ["git-bluecompute-web"]
    configuration:
      content: $file(bluecompute-web.pipeline.yml)
      env:
       DOMAIN: "{{deploy.parameters.route-domain}}"
       REPO: "git-bluecompute-web"
       REGION: "{{deploy.parameters.deploy-region}}"
       ORG: "{{deploy.parameters.deploy-org}}"
       SPACE: "{{deploy.parameters.deploy-space}}"
       NAME: "{{deploy.parameters.bluecompute-web-app-name}}"
      execute: true

deploy:
  schema: deploy.json
  service-category: pipeline
  parameters:
    deploy-region: "{{region}}"
    deploy-org: "{{organization}}"
    deploy-space: dev
    route-domain: mybluemix.net
    bluecompute-web-app-name: "{{pipeline-bluecompute-web.parameters.name}}"
